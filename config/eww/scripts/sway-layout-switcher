#!/usr/bin/env bash

# Script to switch to different layouts in Sway.
# This is done by setting the follwing for all provided workspaces
# preferably all workspaces on an output 

# Tiling layout (default): 1. reload sway
# Floating layout: 1. set all current windows to floating
#                  2. set event listener to float all new windows

# Requires: sway, jq
# Usage: sway-layout-switcher <layout>
#        sway-layout-switcher floating
#        sway-layout-switcher tiling

if [ $# -eq 0 ]; then
  echo "No arguments provided"
  exit 1
fi

update_eww_vars() {
  eww update "layout_icon=$1"
  eww update "layout_state=$2"
}

set_floating() {
  local ws_active_nodes=$(swaymsg -t get_tree | jq -r '[.nodes | .[] | .nodes | .[] | select(has("num")) | select(.nodes != []) | .num] | @sh')

  for w in $ws_active_nodes; do
    swaymsg "[workspace=^$w\$] floating enable"
  done

  # set window rule float all new windows in every workspace
  swaymsg "for_window [workspace=^.*] floating enable"

  update_eww_vars "󰖲" "floating"
}

set_tiling() {
  local ws_active_floats=$(swaymsg -t get_tree | jq -r '[.nodes | .[] | .nodes | .[] | select(has("num")) | select(.floating_nodes != []) | .num] | @sh')

  for w in $ws_active_floats; do
    swaymsg "[workspace=^$w\$] floating disable"
  done

  update_eww_vars "󰕴" "tiling"

  # reset floating rule, right now there is no other way
  swaymsg reload &
  eww reload &
}

if [ "$1" == "tiling" ]; then
  set_tiling
elif [ "$1" == "floating" ]; then
  set_floating
else
  echo "not a valid layout"
  exit 1
fi
