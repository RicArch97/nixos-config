#!/usr/bin/env bash

# Script to listen for workspace updates and generate yuck syntax for EWW.
# This script runs until it's manually terminated.

# Requires: sway, jq
# Usage: sway-workspaces <workspaces>
#        sway-workspaces 1-8

if [ $# -eq 0 ]; then
  echo "No arguments provided"
  exit 1
fi

contains() {
  for e in $1; do
    [ "$e" -eq "$2" ] && echo 1 && return
  done
  echo 0
}

wrap() {
  local class="\"class\":\"$1\""
  local onclick="\"onclick\":\"$2\""
  local icon="\"icon\":\"$3\""
  
  echo "{$class,$onclick,$icon}"
}

query() {
  local workspaces=$(swaymsg -t get_workspaces)
  # parse all info
  all=$(echo "$workspaces" | jq -r '[.[] | .num] | @sh')
  visible=$(echo "$workspaces" | jq -r '[.[] | select (.visible == true) | .num] | @sh')
  urgent=$(echo "$workspaces" | jq -r '[.[] | select (.urgent == true) | .num] | @sh')
}

generate() {
  cmd="["
  for (( w=$1; w<=$2; w++ )); do
    icon="󰝦"
    class="workspace-inactive"
    
    if [ "$(contains "$all" "$w")" -eq 1 ]; then
      class="workspace-invisible"
    fi
    
    if [ "$(contains "$visible" "$w")" -eq 1 ]; then
      icon="󰪥"
      class="workspace-visible"
    fi
    
    if [ "$(contains "$urgent" "$w")" -eq 1 ]; then
      class="workspace-urgent"
    fi
    
    # though swaysome, workspaces are handled as tags per monitor
    # focus is always 0-9
    w_focus=$(expr $w % 10)

    cmd+="$(wrap "$class" "swaysome focus $w_focus" "$icon"),"
  done

  cmd="${cmd::-1}]" # strip the trailing comma
  echo "$cmd"
}

update_workspaces() {
  query

  bound1=$(echo $1 | cut -d '-' -f1)
  bound2=$(echo $1 | cut -d '-' -f2)
  
  echo "$(generate bound1 bound2)"
}

# first run
update_workspaces $1 &
swaymsg -t subscribe -m '[ "workspace" ]' | while read -r _ ; do
  update_workspaces $1 &
done
